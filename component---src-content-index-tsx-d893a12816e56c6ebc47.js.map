{"version":3,"sources":["webpack:///./src/content/index.tsx"],"names":["Content","styled","main","p","theme","breakpoints","md","xl","Title","h1","Subtitle","h2","ReactLogo","props","aria-label","viewBox","focusable","cx","cy","r","fill","stroke","strokeWidth","rx","ry","transform","GetStarted","Link","ListContainer","div","Landing","siteMetadata","useSiteMetadata","title","to","$rotate","$dense"],"mappings":"4FAAA,gFAYMA,EAAUC,IAAOC,KAAV,uEAAGD,CAAH,uKAMU,SAACE,GAAD,OAAOA,EAAEC,MAAMC,YAAYC,MAI3B,SAACH,GAAD,OAAOA,EAAEC,MAAMC,YAAYE,MAK5CC,EAAQP,IAAOQ,GAAV,qEAAGR,CAAH,0CAKLS,EAAWT,IAAOU,GAAV,wEAAGV,CAAH,oDAqBRW,EAAYX,aAhBO,SAAC,GAAD,IAAMY,EAAN,2BACvB,uCACEC,aAAW,aACXC,QAAQ,oBACRC,WAAW,GACPH,GAEJ,4BAAQI,GAAG,IAAIC,GAAG,IAAIC,EAAE,OAAOC,KAAK,iBACpC,uBAAGC,OAAO,eAAeC,YAAY,IAAIF,KAAK,QAC5C,6BAASG,GAAG,KAAKC,GAAG,MAAMC,UAAU,cACpC,6BAASF,GAAG,KAAKC,GAAG,MAAMC,UAAU,eACpC,6BAASF,GAAG,KAAKC,GAAG,MAAMC,UAAU,qBAK3B,yEAAGxB,CAAH,wlBAgBQ,SAACE,GAAD,OAAOA,EAAEC,MAAMC,YAAYC,MAuC5CoB,EAAazB,YAAO0B,KAAV,0EAAG1B,CAAH,8VAoBO,SAACE,GAAD,OAAOA,EAAEC,MAAMC,YAAYC,MAK5CsB,EAAgB3B,IAAO4B,IAAV,6EAAG5B,CAAH,6EA0CJ6B,UAnCK,WAClB,IAAMC,EAAeC,cAErB,OACE,oCACE,kBAAC,MAAD,MACA,kBAAC,uBAAD,KACE,kBAAChC,EAAD,KACE,kBAACY,EAAD,MACA,kBAACJ,EAAD,KAAQuB,EAAaE,OACrB,kBAACvB,EAAD,qDACA,kBAACgB,EAAD,CAAYQ,GAAG,oBAAf,cAEE,kBAAC,YAAD,CAAWC,QAAS,MAEtB,kBAACP,EAAD,KACE,4BACE,oEACA,qEACA,2DACA,gEACmC,kBAAC,kBAAD,CAAiBQ,QAAM,KAE1D,gEACmC,kBAAC,aAAD,CAAYA,QAAM,KAErD","file":"component---src-content-index-tsx-d893a12816e56c6ebc47.js","sourcesContent":["import { Link } from 'gatsby'\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport {\n  ArrowIcon,\n  BeakerIcon,\n  CodeSandboxIcon,\n  DefaultThemeProvider,\n  SEO,\n} from '../components'\nimport { useSiteMetadata } from '../graphql'\n\nconst Content = styled.main`\n  border-top: 1em solid var(--app-pink);\n  padding: 1em;\n  margin: 0 auto;\n  text-align: center;\n\n  @media (min-width: ${(p) => p.theme.breakpoints.md}) {\n    padding-top: 4em;\n  }\n\n  @media (min-width: ${(p) => p.theme.breakpoints.xl}) {\n    padding-top: 8em;\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 4em;\n  color: var(--app-pink);\n`\n\nconst Subtitle = styled.h2`\n  color: var(--app-foreground);\n  margin-bottom: 2em;\n`\n\nconst ReactLogoSVG: FC = ({ ...props }) => (\n  <svg\n    aria-label=\"React logo\"\n    viewBox=\"-11.5 -11.5 23 23\"\n    focusable={false}\n    {...props}\n  >\n    <circle cx=\"0\" cy=\"0\" r=\"2.05\" fill=\"currentColor\" />\n    <g stroke=\"currentColor\" strokeWidth=\"1\" fill=\"none\">\n      <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(0)\" />\n      <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(60)\" />\n      <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(120)\" />\n    </g>\n  </svg>\n)\n\nconst ReactLogo = styled(ReactLogoSVG)`\n  margin: 1em;\n  height: 150px;\n  color: var(--app-cyan);\n  animation: rainbow 3s ease-in-out, pulse 2s cubic-bezier(0.83, 0, 0.17, 1);\n  animation-play-state: paused;\n  animation-iteration-count: infinite;\n\n  :hover {\n    animation-play-state: running;\n  }\n\n  @media (prefers-reduced-motion: reduce) {\n    animation: none;\n  }\n\n  @media (min-width: ${(p) => p.theme.breakpoints.md}) {\n    height: 200px;\n    margin: 2em;\n  }\n\n  @keyframes rainbow {\n    0% {\n      color: var(--app-cyan);\n    }\n    30% {\n      color: var(--app-purple);\n    }\n    40% {\n      color: var(--app-pink);\n    }\n    100% {\n      color: var(--app-green);\n    }\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    25% {\n      transform: scale(1.1);\n    }\n    50% {\n      transform: scale(0.9);\n    }\n    75% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n`\n\nconst GetStarted = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2em;\n  color: var(--app-background);\n  background-color: var(--app-foreground);\n  padding: 1rem 2rem;\n  border-radius: 999px;\n  text-decoration: none;\n  margin-bottom: 3em;\n\n  :visited {\n    color: var(--app-background);\n  }\n\n  :focus {\n    outline: 4px solid var(--app-foreground);\n  }\n\n  @media (min-width: ${(p) => p.theme.breakpoints.md}) {\n    font-size: 3em;\n  }\n`\n\nconst ListContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: left;\n`\n\nconst Landing: FC = () => {\n  const siteMetadata = useSiteMetadata()\n\n  return (\n    <>\n      <SEO />\n      <DefaultThemeProvider>\n        <Content>\n          <ReactLogo />\n          <Title>{siteMetadata.title}</Title>\n          <Subtitle>code-oriented React tutorial for programmers</Subtitle>\n          <GetStarted to=\"/getting-started\">\n            Get Started\n            <ArrowIcon $rotate={90} />\n          </GetStarted>\n          <ListContainer>\n            <ul>\n              <li>no previous React knowledge required</li>\n              <li>some JavaScript knowledge is required</li>\n              <li>tons of real world examples</li>\n              <li>\n                examples editable on CodeSandbox <CodeSandboxIcon $dense />\n              </li>\n              <li>\n                most examples include unit tests <BeakerIcon $dense />\n              </li>\n              <li>links for further research</li>\n            </ul>\n          </ListContainer>\n        </Content>\n      </DefaultThemeProvider>\n    </>\n  )\n}\n\nexport default Landing\n"],"sourceRoot":""}